!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BG_BLACK	color.h	28;"	d
BG_BLUE	color.h	32;"	d
BG_CYAN	color.h	34;"	d
BG_GREEN	color.h	30;"	d
BG_MAGENTA	color.h	33;"	d
BG_RED	color.h	29;"	d
BG_WHITE	color.h	35;"	d
BG_YELLOW	color.h	31;"	d
BLUE	color.h	15;"	d
BLUE	color.h	46;"	d
B_BLUE	color.h	39;"	d
B_BLUE	color.h	8;"	d
B_CYAN	color.h	10;"	d
B_CYAN	color.h	41;"	d
B_GREEN	color.h	37;"	d
B_GREEN	color.h	6;"	d
B_MAGENTA	color.h	40;"	d
B_MAGENTA	color.h	9;"	d
B_RED	color.h	36;"	d
B_RED	color.h	5;"	d
B_WHITE	color.h	11;"	d
B_WHITE	color.h	42;"	d
B_YELLOW	color.h	38;"	d
B_YELLOW	color.h	7;"	d
CHECK_FMT	log.h	24;"	d
CYAN	color.h	17;"	d
CYAN	color.h	48;"	d
FG_BLACK	color.h	20;"	d
FG_BLUE	color.h	24;"	d
FG_CYAN	color.h	26;"	d
FG_GREEN	color.h	22;"	d
FG_MAGENTA	color.h	25;"	d
FG_RED	color.h	21;"	d
FG_WHITE	color.h	27;"	d
FG_YELLOW	color.h	23;"	d
GH_LOG_DEBUG	log.h	8;"	d
GH_LOG_ERROR	log.h	5;"	d
GH_LOG_MAX	log.h	9;"	d
GH_LOG_MSG	log.h	7;"	d
GH_LOG_WARN	log.h	6;"	d
GREEN	color.h	13;"	d
GREEN	color.h	44;"	d
KEEP_LINE	log.h	12;"	d
LOG_FILE_MAXSIZE	log.h	13;"	d
MAGENTA	color.h	16;"	d
MAGENTA	color.h	47;"	d
MAX_LINE	log.h	11;"	d
RED	color.h	12;"	d
RED	color.h	43;"	d
System	log.c	/^int System(char *cmd)$/;"	f
WHITE	color.h	18;"	d
WHITE	color.h	49;"	d
YELLOW	color.h	14;"	d
YELLOW	color.h	45;"	d
_COLOR_H_	color.h	2;"	d
__LOG_H__	log.h	2;"	d
g_fp	log.c	/^static FILE* g_fp ;$/;"	v	file:
g_level_str	log.h	/^const char* g_level_str[] = {$/;"	v
g_log_level	log.c	/^static int g_log_level = GH_LOG_MSG;$/;"	v	file:
get_chdir	log.c	/^static int get_chdir(const char *logfile, char *dir, int size)$/;"	f	file:
get_file_lines	log.c	/^int get_file_lines(const char *file)$/;"	f
get_logfile_size	log.c	/^static long get_logfile_size(FILE *fp)$/;"	f	file:
log_debug	log.c	/^void log_debug(const char *file, int line,  const char *fmt, ...)$/;"	f
log_dirpath	log.c	/^static char log_dirpath[256];$/;"	v	file:
log_error	log.c	/^void log_error(int errcode, const char *file, int line, const char *fmt, ...)$/;"	f
log_exit	log.c	/^static void log_exit(int errcode)$/;"	f	file:
log_exit_cb	log.c	/^log_exit_func  log_exit_cb = NULL;$/;"	v
log_exit_func	log.h	/^typedef void (*log_exit_func)(int);$/;"	t
log_filename	log.c	/^static char log_filename[256];$/;"	v	file:
log_init	log.c	/^int log_init(int level, const char *logfile)$/;"	f
log_print	log.c	/^static int log_print(int level, const char *file, int line,$/;"	f	file:
log_print_cb	log.c	/^log_print_func log_print_cb = NULL;$/;"	v
log_print_func	log.h	/^typedef void (*log_print_func)(int, const char*);$/;"	t
log_set_exit_cb	log.c	/^void log_set_exit_cb(log_exit_func cb)$/;"	f
log_set_print_cb	log.c	/^void log_set_print_cb(log_print_func cb)$/;"	f
log_warn	log.c	/^void log_warn(const char *file, int line, const char *fmt, ...)$/;"	f
log_xerror	log.c	/^void log_xerror(int errcode, const char *file, int line, const char *fmt, ...)$/;"	f
log_xmsg	log.c	/^void log_xmsg(const char *file, int line, const char *fmt, ...)$/;"	f
log_xwarn	log.c	/^void log_xwarn(const char *file, int line, const char *fmt, ...)$/;"	f
logd	log.h	47;"	d
loge	log.h	42;"	d
logm	log.h	46;"	d
logw	log.h	44;"	d
logxe	log.h	43;"	d
logxw	log.h	45;"	d
main	log.c	/^int main()$/;"	f
save_logfile	log.c	/^static FILE *save_logfile(FILE *fp)$/;"	f	file:
truncate_file	log.c	/^int truncate_file(const char *file, int truncate_line)$/;"	f
